;A sprite sheet must always have base properites
[BaseProperties]
;what type the animations are.
;true means that the animation uses segments for more complex animation states, easier to work with and greater flexibility but at the cost of performance
;false means that it just uses preset image frames for animations (ignores segments), harder to work with but better at performance (this is the default setting)
is_dynamic = true

;Segments
[UpperSegment]
is_segment = true
;aggregate_height means that it will add its height with whatever other segments that are present
aggregate_height = true
;the two indexes denoting where the first frame of the animation or segment starts
xindex = 0
yindex = 0
height = 21
width = 15
height_offset = 0
width_offset = 0
count = 1
cycle_time = 1.0
border_size = 1
;if true, the frames will be played backwards, what this means is insted of incrementing the X read position to go to the next frame, the X read position will be decremented instead
reverse = false

[LowerSegment]
is_segment = true
aggregate_height = true
xindex = 0
yindex = 22
height = 22
width = 15
height_offset = 0
width_offset = 0
count = 4
cycle_time = 1.0
border_size = 1

;offset testing
[OffsetUpperSegment]
is_segment = true
aggregate_height = true
aggregate_width = false
xindex = 113
yindex = 0
height = 28
width = 15
height_offset = 7
width_offset = 0
count = 4
cycle_time = 1.0
border_size = 1
reverse = true


;Animation states
[BasicStand]
;order of segments, the first one will be rendered on top of every subsequent segment after it
segments = OffsetUpperSegment, LowerSegment
frame_index = 0
border_size = 1
width = 0
height = 0
;these values will be added onto the current position of the player when drawing the frame (not onto actual transform). Can be negative
x_draw_offset = 0
y_draw_offset = 0
;these values will reposition the segment within the width and height
LowerSegment_x_offset = 0
LowerSegment_y_offset = 0
count = 4
cycle_time = 10.0
flip_h = false;
flip_v = false;






;Keys that might be implemented

;frame overrides allow you to override a specific frame with another section of an image that
;isnt in the frames regular order
;frame_overrides = 1,4,5
;override1 =
;override4 =
;override5 =
